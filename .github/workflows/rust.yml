# .github/workflows/ci.yml ─ Rust CI pipeline
name: Rust CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

defaults:
  run:
    shell: bash

jobs:
  # ---------- 1. Fast compile check --------------------------------
  check:
    name: 🛠️ cargo check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo check --workspace --all-features

  # ---------- 2. rustfmt -------------------------------------------
  fmt:
    name: 🎨 rustfmt
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  # ---------- 3. Test suite ----------------------------------------
  test:
    name: 🧪 tests
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --workspace --all-features --verbose

  # ---------- 4. Clippy lint ---------------------------------------
  clippy:
    name: 🔍 clippy
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy --all-targets --all-features -- -D warnings

  # ---------- 5. Coverage (tarpaulin) ------------------------------
  coverage:
    name: 📊 coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with: { tool: cargo-tarpaulin }
      - run: |
          cargo tarpaulin --workspace --all-features --timeout 120 \
            --out Xml --out Html
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            tarpaulin-report.xml
            tarpaulin-report.html

  # ---------- 6. Security audit ------------------------------------
  security_audit:
    name: 🛡️ cargo-audit
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: taiki-e/install-action@v2
        with: { tool: cargo-audit }
      - run: cargo audit --deny warnings

  # ---------- 7. Optimised build -----------------------------------
  build:
    name: 📦 release build
    runs-on: ubuntu-latest
    needs: [fmt, clippy, security_audit, test]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --release --workspace --all-features --verbose
      - uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: target/release/
